'use strict';
console.log('Generating resource file...');
const fs = require('fs');
const cs = new (require('./commentstripper.js'))();

var shaderfile = fs.readFileSync('src/renderer/shader.glsl', 'utf8');

// var imagefile = new Uint8Array(fs.readFileSync('../res/gee.png'));

shaderfile = cs.strip( shaderfile ).replace(/(\r\n|\n|\r)/gm, '\\n');

// var vert = shaderfile.split('<vertshader>')[1];
// var frag = shaderfile.split('<fragshader>')[1];

let arr = shaderfile.split('<shader ');

var out = "//this file is generated by res.js\n";

for (var i = 1; i < arr.length; i++) {
	let _t = arr[i].split('/>');

	out += `const char ${_t[0]}[] = "${_t[1]}";\n`;
	
}


let file = fs.readFileSync('scripts/font.ttf');

file = new Uint8Array(file);


	out += `\nconst unsigned char Consolas[] = {\n`;

for (var i = 0; i < file.length; i++) {
	out += `${file[i]}, `;
}

out += `};`;

// const char[] chunk_vert_shader = "${vert}";
// const char[] chunk_frag_shader = "${frag}";
// `;

fs.writeFileSync( 'build/res.h', out );
console.log('Resource file created!');


